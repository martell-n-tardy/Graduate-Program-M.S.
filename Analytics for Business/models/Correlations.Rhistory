max(EED_3$`Game Prize Money Available`)
max(EED_3$`Game Prize Money Available`)
min(EED_3$`Game Prize Money Available`)
library(readr)
EED_3 <- read_csv("Desktop/EED_Tournaments.csv")
View(EED_3)
max(EED_3$`Game Prize Money Available`)
library(readr)
EED_2 <- read_csv("Desktop/EED_OverallEarnings.csv")
View(EED_2)
class(EED_3)
EED3 =  data.table(EED_3)
suppressMessages(library(data.table))
EED3 =  data.table(EED_3)
class(EED3)
EED2 =  data.table(EED_2)
class(EED2)
setkey(EED2$`Player ID`)
PlayerID = (EED_2$`Player ID`, EED_2$`Highest Paying Game`)
setkey(EED2,`Player ID`)
setkey(EED2, 'Highest Paying Game')
PlayerID = merge(EED2)
PlayerID = merge(EED2,EED2)
View(EED2)
PlayerID = (EED_2$`Player ID`)
HPG = (EED_2$`Highest Paying Game`)
MergeEED2 = (PlayerID, HPG)
MergeEED2 = merge(PlayerID, HPG)
View(MergeEED2)
class(MergeEED2)
dim(MergeEED2)
length(unique(MergeEED2$x))
EED_2[which(EED_2$`Highest Paying Game`== 'Dota 2'),]
Dota2 = EED_2[which(EED_2$`Highest Paying Game`== 'Dota 2'),]
View(Dota2)
library(readr)
EED_OverallEarnings <- read_csv("Desktop/EED_OverallEarnings.csv")
View(EED_OverallEarnings)
EED_2 <- EED_OverallEarnings
View(EED_2)
Dota2 = EED_2[which(EED_2$`Highest Paying Game`== 'Dota 2'),]
View(Dota2)
max(Dota2$`Total (Game): Total Prize Money Player Won`)
CounterStrikeGO = EED_2[which(EED_2$`Highest Paying Game`== 'Counter-Strike: Global Offensive'),]
View(CounterStrikeGO)
max(CounterStrikeGO)
max(CounterStrikeGO$`Total (Game): Total Prize Money Player Won`)
LeagueofLegends = EED_2[which(EED_2$`Highest Paying Game`== 'League of Legends'),]
View(LeagueofLegends)
max(LeagueofLegends$`Total (Game): Total Prize Money Player Won`)
library(cluster)
wss = rep(0,10)
StarCraft2 = EED_2[which(EED_2$`Highest Paying Game`== 'StarCraft II'),]
View(StarCraft2)
max(StarCraft2$`Total (Game): Total Prize Money Player Won`)
library(readr)
EED_1 <- read_csv("Desktop/EED_ConsolePlayers.csv")
View(EED_1)
library(readr)
TGD <- read_csv("Desktop/Top Games Dataset.csv")
View(TGD)
dim(TGD)
library(readr)
Top_Games_Dataset <- read_csv("Desktop/Top Games Dataset.csv")
View(Top_Games_Dataset)
TGD <- Top_Games_Dataset
View(TGD)
library(readr)
dataset <- read_csv(NULL)
View(dataset)
library(readr)
TGD <- read_csv("Desktop/Top Games Dataset.csv")
View(TGD)
dim(TGD)
count(TGD$PC)
library(dplyr)
count(TGD$PC)
count(group_by(TGD$PC))
group_by(TGD$PC)
shiny::runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone/FinalApp')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone/FinalApp')
library(readr)
CompleteDataset <- read_csv("Desktop/CompleteDataset.csv")
View(CompleteDataset)
C <- data.frame(CompleteDataset[,-1], row.names = CompleteDataset$GameTitle)
Complete2<-mutate_if(C,is.character,as.factor)
library(dplyr)
Complete2<-mutate_if(C,is.character,as.factor)
Complete3<-mutate_if(Complete2,is.integer,as.double)
rownames(Complete3)<-CompleteDataset$GameTitle
glimpse(Complete3)
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone/FinalApp')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone/FinalApp')
View(Complete3)
View(Complete)
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone/FinalApp')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone/FinalApp')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone/FinalApp')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone/FinalApp')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone/FinalApp')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone/FinalApp')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone/FinalApp')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone/FinalApp')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone/FinalApp')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone/FinalApp')
library(cluster)
gd=daisy(Complete3, metric = c("gower"))
distance = dist(gd)
summary(gd)
save.image("~/Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone/FinalApp/RCode.RData")
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone/FinalApp')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone/FinalApp')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone/FinalApp')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone/FinalApp')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone/FinalApp')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone/FinalApp')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone/FinalApp')
sil_width<-c(NA)
for(i in 2:10){
pam_fit <- pam(gd,
diss = TRUE,
k = i)
sil_width[i] <- pam_fit$silinfo$avg.width
}
plot(1:10, sil_width,
xlab = "Number of Clusters",
ylab = "Silhouette Width")
lines(1:10, sil_width)
save.image("~/Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/RCode.RData")
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone/FinalApp')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone/FinalApp')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone/FinalApp')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone/FinalApp')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone/FinalApp')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone/FinalApp')
pam_fit<-pam(gd, diss = TRUE, k = 5)
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone/FinalApp')
summary(gd)
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone/FinalApp')
save.image("~/Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone/FinalApp/RCode.RData")
load("~/Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone/R Code Monday8.8.18.R")
load("~/Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone/Tuesday8.9.18.RData")
load("~/Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone/Capstone_Tardy/server.R")
load("~/Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone/Capstone_Tardy/Capstone_Tardy/ui.R")
load("~/Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone/Monday Datasets8.8.18.RData")
load("~/Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone/FinalApp/RCode.RData")
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone/FinalApp/Monday23.R')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone/FinalApp/Monday23.R')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone/FinalApp/Monday23.R')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone/FinalApp/Monday23.R')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone/FinalApp/Monday23.R')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone/FinalApp/Monday23.R')
load("~/Final Project.RData")
results<-Complete3%>%
mutate(cluster = pam_fit$clustering)%>%
group_by(cluster)%>%
do(the_summary = summary(.))
library(dplyr)
results<-Complete3%>%
mutate(cluster = pam_fit$clustering)%>%
group_by(cluster)%>%
do(the_summary = summary(.))
results$the_summary
shiny::runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone/FinalApp')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone/FinalApp')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone/FinalApp')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone/FinalApp')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone/FinalApp')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone/FinalApp')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone/FinalApp')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone/FinalApp')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone/FinalApp')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone/FinalApp')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone/FinalApp')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone/FinalApp')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone/FinalApp')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone/FinalApp')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone/FinalApp')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone/FinalApp')
shiny::runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone/FinalApp')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone/FinalApp/Monday23.R')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone/FinalApp')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone/FinalApp/Monday23.R')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone/FinalApp')
summary(gd)
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone/FinalApp')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone/FinalApp')
runApp('Part2')
runApp('Part2')
runApp('Part2')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone/FinalApp')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone/FinalApp/Monday23.R')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone/FinalApp')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone/FinalApp')
runApp('Part2')
runApp('Part2')
runApp('Part2')
runApp('Part2')
runApp('Part2')
runApp('Part2')
runApp('Part2')
runApp('Part2')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone/FinalApp')
runApp('Part2')
runApp('Part2')
runApp('Part2')
runApp('Part2')
runApp('Part2')
runApp('Part2')
runApp('Part2')
runApp('Part2')
runApp('Part2')
runApp('Part2')
runApp('Part2')
runApp('Part2')
runApp('Part2')
runApp('Part2')
runApp('Part2')
runApp('Part2')
runApp('Part2')
runApp('Part2')
runApp('Part2')
runApp('Part2')
runApp('Part2')
runApp('Part2')
runApp('Part2')
runApp('Part2')
runApp('Part2')
runApp('Part2')
runApp('Part2')
runApp('Part2')
runApp('Part2')
runApp('Part2')
library(dplyr)
results<-Complete3%>%
mutate(cluster = pam_fit$clustering)%>%
group_by(cluster)%>%
do(the_summary = summary(.))
results$the_summary
runApp('Part2')
runApp('Part2')
runApp('Part2')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
savehistory("~/Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone/History.Rhistory")
save.image("~/Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone/Environment.RData")
shiny::runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
summary(Complete3)
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
results$the_summary[[1]]
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
library(stats)
library(caret)
library(arules)
library(rpart)
library(rpart.plot)
library(plyr)
library(curl)
library(arulesViz)
library(datasets)
library(car)
library(e1071)
library(broom)
library(devtools)
library(psych)
library(PerformanceAnalytics)
library(neuralnet)
library(aod)
library(klaR)
library(MASS)
library(lattice)
library(ggplot2)
library(TTR)
install.packages("TTR")
#Correlation sales and game players
#test correlation sales and total players, award money, tournuments, users and critics score
pairs(data = CompleteDataset, ~UserScore+CriticScore+Global_Sales+
TournamentMoneyAwarded+TournamentTotalPlayers+TotalTournaments)
cor<-select(CompleteDataset,UserScore,CriticScore,Global_Sales,
TournamentMoneyAwarded,TournamentTotalPlayers,TotalTournaments)
cor<-select(final3,UserScore,CriticScore,Global_Sales,
cor<-select(CompleteDataset,UserScore,CriticScore,Global_Sales,
TournamentMoneyAwarded,TournamentTotalPlayers,TotalTournaments)
cor<-select(CompleteDataset,UserScore,CriticScore,Global_Sales,TournamentMoneyAwarded,TournamentTotalPlayers,TotalTournaments)
cor<-select(data = CompleteDataset,UserScore,CriticScore,Global_Sales,
+ TournamentMoneyAwarded,TournamentTotalPlayers,TotalTournaments)
cor<-select(UserScore,CriticScore,Global_Sales,TournamentMoneyAwarded,TournamentTotalPlayers,TotalTournaments)
View(CompleteDataset)
cor = select(CompleteDataset,UserScore,CriticScore,Global_Sales,TournamentMoneyAwarded,TournamentTotalPlayers,TotalTournaments)
library(dplyr)
cor<-select(CompleteDataset,UserScore,CriticScore,Global_Sales,
TournamentMoneyAwarded,TournamentTotalPlayers,TotalTournaments)
cor_test<-cor.test(cor,
use    = "pairwise",
method = "pearson",
adjust = "none")
library(stats)
cor_test<-cor.test(cor,
+ use    = "pairwise",
+ method = "pearson",
+ adjust = "none")
cor_test<-cor.test(cor,
use = "pairwise",
method = "pearson",
adjust = "none")
cor_test<-cor.test(cor,use="pairwise",method = "pearson", adjust= "none")
pairs(data = CompleteDataset, ~UserScore+CriticScore+Global_Sales+
TournamentMoneyAwarded+TournamentTotalPlayers+TotalTournaments)
cor_test<-cor.test(cor,use = "pairs",method = "pearson", adjust= "none")
cor_test<-cor.test(cor,method = "pearson")
cor_test<-cor.test(cor, )
cor_test<-cor.test(cor,
y = NULL, use = "pairwise", method = "pearson", adjust = "none")
cor_test<-cor.test(cor,
cor, use = "pairwise", method = "pearson", adjust = "none")
cor
cor_test<-cor.test(cor,
use    = "pairwise",
method = "pearson",
adjust = "none")
pairs(data = CompleteDataset, ~UserScore+CriticScore+Global_Sales+
+           TournamentMoneyAwarded+TournamentTotalPlayers+TotalTournaments)
cor_test<-cor.test(cor,
use    = "pairwise",
method = "pearson",
adjust = "none")
cor_test<-cor.test(cor,
use    = "pairwise",
method = "pearson",
adjust = "none")
#CART Tree Sales by players by Tournuments by Genre
tree_data<-CompleteDataset[,-c(1,2,3,4,6,30)]
tree_data
tree_sales<-rpart(tree_data$Global_Sales~ .,
data = tree_data)
rpart.plot(tree_sales, type = 4)
plot(tree_sales, type = 4)
rpart(tree_data$Global_Sales~ .,
+                   data = tree_data)
tree_sales
tree_sales.plot
plot(tree_sales)
library(rpart)
rpart.plot(tree_sales, type = 4)
install.packages("rpart.plot")
rpart.plot(tree_sales, type = 4)
rpart.plot::rpart.plot(tree_sales, type = 4)
plotcp(tree_sales)
rpart.plot::rpart.plot(tree_sales, type = 4)
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
rpart.plot::rpart.plot(tree_sales, type = 4)
plotcp(tree_sales)
summary(tree_sales)
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
save.image("~/Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone/Environment.RData")
library(stats)
library(caret)
library(arules)
library(rpart)
library(rpart.plot)
library(plyr)
library(curl)
library(arulesViz)
library(datasets)
library(car)
library(e1071)
library(broom)
library(devtools)
library(psych)
library(PerformanceAnalytics)
library(neuralnet)
library(aod)
library(klaR)
library(MASS)
library(lattice)
library(ggplot2)
library(TTR)
install.packages("TTR")
library(TTR)
#Correlation sales and game players
#test correlation sales and total players, award money, tournuments, users and critics score
pairs(data = CompleteDataset, ~UserScore+CriticScore+Global_Sales+
TournamentMoneyAwarded+TournamentTotalPlayers+TotalTournaments)
cor<-select(CompleteDataset,UserScore,CriticScore,Global_Sales,
TournamentMoneyAwarded,TournamentTotalPlayers,TotalTournaments)
library("dplyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
cor<-select(CompleteDataset,UserScore,CriticScore,Global_Sales,
TournamentMoneyAwarded,TournamentTotalPlayers,TotalTournaments)
cor_test<-corr.test(cor,
use    = "pairwise",
method = "pearson",
adjust = "none")
print(cor_test,short=FALSE)
chart.Correlation(cor,method="pearson",histogram = TRUE, pch=16)
shiny::runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
cor<-select(CompleteDataset,UserScore,CriticScore,Global_Sales,
+ TournamentMoneyAwarded,TournamentTotalPlayers,TotalTournaments)
cor<-select(CompleteDataset,UserScore,CriticScore,Global_Sales,
+ TournamentMoneyAwarded,TournamentTotalPlayers,TotalTournaments)
cor<-select(CompleteDataset,UserScore,CriticScore,Global_Sales,
TournamentMoneyAwarded,TournamentTotalPlayers,TotalTournaments)
cor_test<-corr.test(cor,
use    = "pairwise",
method = "pearson",
adjust = "none")
print(cor_test,short=FALSE)
chart.Correlation(cor,method="pearson",histogram = TRUE, pch=16)
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
continous_logical_data<-CompleteDataset[,-c(1,2,3,4,5,6,7,30,32)]
lm_sales<-glm(continous_logical_data$TournamentTotalPlayers ~.,
data = continous_logical_data,family=poisson(link='log'))
par(mfrow = c(2, 2))
plot(lm_sales)
summary(lm_sales)
wald.test(lm_sales)
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
runApp('Desktop/GRAD SCHOOL/FA18/CAPSTONE Project/R_Capstone/Capstone')
savehistory("~/History.Rhistory")
